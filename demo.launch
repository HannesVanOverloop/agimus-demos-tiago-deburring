<launch>
  <!-- World setup -->
  <arg name="estimation" default="false"
    doc="set to true to start automatically the computer vision and state estimation nodes." />
  <arg name="simulation" default="false"
       doc="whether the demo is run in Gazebo"/>

  <include file="$(find agimus_demos)/launch/tiago_deburring_world_setup.launch">
  </include>

  <!-- Initialization of robot root_joint pose as a ROS param
       value = "x y z X Y Z W" where Xi+Yj+Zk+W is a quaternion -->
  <!--param name="robot_initial_pose" value="3 0.9 0 0 0 1 0"/-->
  <param name="robot_initial_pose" value="-1 -1 0 0 0 0 1"/>

  <param name="/agimus/move_base_method" value="full_path"/>
  <param name="/hpp/host" value="localhost" if="$(arg simulation)"/>
  <param name="/hpp/host" value="10.68.0.129" unless="$(arg simulation)"/>

  <!-- SoT parameters -->
  <arg name="script_file" doc="Full path to the script which initialize the supervisor"
    default="$(find agimus_demos)/tiago/deburring/supervisor.py" />

  <include file="$(find roscontrol_sot_tiago)/launch/controller.launch" >
    <arg name="use_mobile_base" value="false"/>
    <arg name="end_effector" value="pal-hey5"/>
    <arg name="simulation" value="$(arg simulation)"/>
  </include>

  <!--This starts the HPP interface in namespace agimus/hpp-->
  <group ns="agimus/hpp">
    <node name="hpp_node" pkg="agimus-hpp" type="hpp_node.py"
      args="hpp-manipulation-server" respawn="true"
      output="screen" />
  </group>

  <!--This starts sot supervisor in namespace agimus/sot-->
  <include file="$(find agimus-sot)/launch/supervisor.launch" >
    <arg name="script_file" value="$(arg script_file)"/>
    <arg name="robot_prefix" value="tiago/"/>
    <arg name="simulate_torque_feedback" value="true"/>
    <arg name="required" value="false"/>
  </include>

  <include file="$(find agimus)/launch/path_execution.launch">
    <arg name="gui" value="false"/>
  </include>

  <include if="$(arg estimation)" file="$(find agimus_demos)/launch/tiago_deburring_estimation.launch"/>
</launch>
